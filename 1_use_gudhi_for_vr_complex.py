# -*- coding: utf-8 -*-
"""1. Use GUDHI for VR_Complex.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sY7SBaK39c7hRdLYZOUBdWrIf-zHbVHC
"""

!pip install gudhi matplotlib numpy

#import required packages
import numpy as np
import matplotlib.pyplot as plt
import gudhi as gd
import gudhi.representations

# Step 1: Generate 25 random 2D datapoints
np.random.seed(42)
num_points = 25
points = np.random.uniform(-1, 1, size=(num_points, 2))
print(points)

#step 2: Construct VR complex
edge_length = 1.5
vr_complex = gd.RipsComplex(points = points, max_edge_length = edge_length)

#Step 3: Construct simpleces
simplex_tree = vr_complex.create_simplex_tree(max_dimension = 2)

#step 4: Construct Persistence
persistence = simplex_tree.persistence()
print(persistence)

#Step 5: Visualize Scatter plot of points, Persistence diagram, Persistnce Barcodes
#Visualize Scatter plot
plt.figure(figsize=(5,5))
plt.scatter(points[:,0], points[:,1], c = 'blue', label = 'Data Points')
plt.legend()
plt.title('Scatter plot for random data points')
plt.show()

#Visualize persistence diagram
gd.plot_persistence_diagram(persistence)
plt.title('Persistence Diagram')
plt.show()

#visualize persistence barcode
gd.plot_persistence_barcode(persistence)
plt.title('Persistene Barcode')
plt.show()

# To Print homology details (Dimension, Birth-Death)
print("Homology details")
for i in persistence:
    print(f"Dimension: {i[0]}, Birth-Death: {i[1]}")

# to count the homologies
print("Homology Counts")
homology_dim = {0 :0, 1 :0, 2 :0}
for i in persistence:
    homology_dim[i[0]] += 1
print(homology_dim)
